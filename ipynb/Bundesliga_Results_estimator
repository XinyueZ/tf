{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Bundesliga_Results_estimator.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "[View in Colaboratory](https://colab.research.google.com/github/XinyueZ/tf/blob/master/ipynb/Bundesliga_Results_estimator)"
      ]
    },
    {
      "metadata": {
        "id": "rg2f5tmt2rcR",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "# Train model to evaluate football result. "
      ]
    },
    {
      "metadata": {
        "id": "usywsvFLF2bo",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "import tensorflow as tf\n",
        "from tensorflow.python.data import Dataset\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.preprocessing import LabelEncoder"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "M1XjwLH4P00k",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "tf.logging.set_verbosity(tf.logging.INFO)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "dy53WMcs27Ez",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "Data-source from https://www.kaggle.com/thefc17/bundesliga-results-19932018"
      ]
    },
    {
      "metadata": {
        "id": "TcCdsIeI225b",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "This dataset contains results from every Bundesliga match from 1993-1994 to 2017-2018. It also includes half time results, but only from 1995-96 to 2017-18. Columns include Division (denoted as D1), HomeTeam, AwayTeam, FTHG (final time home goals), FTAG (final time away goals), FTR (full time result), HTHG (half time home goals), HTAG (half time away goals), HTR (half time result), and season.\n",
        "\n",
        "Data compiled into one file from this site: http://www.football-data.co.uk/germanym.php"
      ]
    },
    {
      "metadata": {
        "id": "6gRBSBTfiO1x",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "e606c1e9-283a-4afc-f13c-bf2cf5c5e80a"
      },
      "cell_type": "code",
      "source": [
        "df = pd.read_csv(\"https://dl.dropbox.com/s/3jzvvjl2iqnlqzz/Bundesliga_Results.csv\", sep=\",\")\n",
        "df = df[pd.notnull(df[\"FTHG\"])]\n",
        "df = df[pd.notnull(df[\"FTAG\"])]\n",
        "df = df[pd.notnull(df[\"FTR\"])]\n",
        "df.head()"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Div</th>\n",
              "      <th>Date</th>\n",
              "      <th>HomeTeam</th>\n",
              "      <th>AwayTeam</th>\n",
              "      <th>FTHG</th>\n",
              "      <th>FTAG</th>\n",
              "      <th>FTR</th>\n",
              "      <th>HTHG</th>\n",
              "      <th>HTAG</th>\n",
              "      <th>HTR</th>\n",
              "      <th>Season</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>D1</td>\n",
              "      <td>7/8/1993</td>\n",
              "      <td>Bayern Munich</td>\n",
              "      <td>Freiburg</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>H</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1993-94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>D1</td>\n",
              "      <td>7/8/1993</td>\n",
              "      <td>Dortmund</td>\n",
              "      <td>Karlsruhe</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>H</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1993-94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>D1</td>\n",
              "      <td>7/8/1993</td>\n",
              "      <td>Duisburg</td>\n",
              "      <td>Leverkusen</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>D</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1993-94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>D1</td>\n",
              "      <td>7/8/1993</td>\n",
              "      <td>FC Koln</td>\n",
              "      <td>Kaiserslautern</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>A</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1993-94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>D1</td>\n",
              "      <td>7/8/1993</td>\n",
              "      <td>Hamburg</td>\n",
              "      <td>Nurnberg</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>H</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1993-94</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Div      Date       HomeTeam        AwayTeam  FTHG  FTAG FTR  HTHG  HTAG  \\\n",
              "0  D1  7/8/1993  Bayern Munich        Freiburg     3     1   H   NaN   NaN   \n",
              "1  D1  7/8/1993       Dortmund       Karlsruhe     2     1   H   NaN   NaN   \n",
              "2  D1  7/8/1993       Duisburg      Leverkusen     2     2   D   NaN   NaN   \n",
              "3  D1  7/8/1993        FC Koln  Kaiserslautern     0     2   A   NaN   NaN   \n",
              "4  D1  7/8/1993        Hamburg        Nurnberg     5     2   H   NaN   NaN   \n",
              "\n",
              "   HTR   Season  \n",
              "0  NaN  1993-94  \n",
              "1  NaN  1993-94  \n",
              "2  NaN  1993-94  \n",
              "3  NaN  1993-94  \n",
              "4  NaN  1993-94  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "metadata": {
        "id": "PWk86xsBDkch",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "def make_dataset_and_labels_and_class_num(df, label_name):\n",
        "  \"\"\"This method will prepare dataset, labels for train, evaluation, test and classes.\n",
        "     Args:\n",
        "      df: DataFrame format of datasource.\n",
        "      label_name: The name of column in datasource which will be as target for train.\n",
        "     Return: \n",
        "       Tuple of (ds_train, ds_eval, ds_test, label_train, label_eval, label_test, classes)\n",
        "      \n",
        "  \"\"\"\n",
        "  target_label_col = \"label\" #New column name in original table.\n",
        "  \n",
        "  encoder = LabelEncoder()\n",
        "  label = encoder.fit_transform(df[label_name])\n",
        "  df.insert(8, target_label_col, label) \n",
        "  result_fit = encoder.fit(df[label_name])\n",
        "  \n",
        "  random_seed = None\n",
        "  np.random.seed(random_seed)\n",
        "  \n",
        "  ds_train = df.sample(frac=0.9, random_state=random_seed)\n",
        "  label_train = ds_train[target_label_col]\n",
        "  \n",
        "  ds_rest = df.drop(ds_train.index)\n",
        "  \n",
        "  ds_eval = ds_rest.sample(frac=0.8, random_state=random_seed)\n",
        "  label_eval = ds_eval[target_label_col]\n",
        "  \n",
        "  ds_test = ds_rest.drop(ds_eval.index)\n",
        "  label_test = ds_test[target_label_col]\n",
        "  \n",
        "  return ds_train[[\"FTHG\", \"FTAG\"]], ds_eval[[\"FTHG\", \"FTAG\"]], ds_test[[\"FTHG\", \"FTAG\"]], label_train, label_eval, label_test, result_fit.classes_"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "NgkHsXdun_dO",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "x_train, x_eval, x_test, y_train, y_eval, y_test, result_classes = make_dataset_and_labels_and_class_num(df, \"FTR\")"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "akLoHfAXAqOi",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "70f8a611-2e22-4f30-9656-3b04c9e3a667"
      },
      "cell_type": "code",
      "source": [
        "result_classes"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['A', 'D', 'H'], dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "metadata": {
        "id": "mgVYA89XoHIV",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "outputId": "f27d75c6-f6ff-4095-c469-490e4dd0b11b"
      },
      "cell_type": "code",
      "source": [
        "x_train.describe()"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>FTHG</th>\n",
              "      <th>FTAG</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>6885.000000</td>\n",
              "      <td>6885.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.656645</td>\n",
              "      <td>1.212781</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.332030</td>\n",
              "      <td>1.157503</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>9.000000</td>\n",
              "      <td>9.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              FTHG         FTAG\n",
              "count  6885.000000  6885.000000\n",
              "mean      1.656645     1.212781\n",
              "std       1.332030     1.157503\n",
              "min       0.000000     0.000000\n",
              "25%       1.000000     0.000000\n",
              "50%       1.000000     1.000000\n",
              "75%       2.000000     2.000000\n",
              "max       9.000000     9.000000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "metadata": {
        "id": "oMlOOyPQoI1E",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "outputId": "6ed9f08b-c96d-4b33-bf98-75d8624269dc"
      },
      "cell_type": "code",
      "source": [
        "x_eval.describe()"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>FTHG</th>\n",
              "      <th>FTAG</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>612.000000</td>\n",
              "      <td>612.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.637255</td>\n",
              "      <td>1.241830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.299295</td>\n",
              "      <td>1.158622</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>6.000000</td>\n",
              "      <td>6.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             FTHG        FTAG\n",
              "count  612.000000  612.000000\n",
              "mean     1.637255    1.241830\n",
              "std      1.299295    1.158622\n",
              "min      0.000000    0.000000\n",
              "25%      1.000000    0.000000\n",
              "50%      1.000000    1.000000\n",
              "75%      2.000000    2.000000\n",
              "max      6.000000    6.000000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "metadata": {
        "id": "xciCTqS2ageV",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "outputId": "61683902-32b5-49bb-e9e4-13525a814ec5"
      },
      "cell_type": "code",
      "source": [
        "x_test.describe()"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>FTHG</th>\n",
              "      <th>FTAG</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>153.000000</td>\n",
              "      <td>153.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.901961</td>\n",
              "      <td>1.196078</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.454416</td>\n",
              "      <td>1.197908</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>3.000000</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>7.000000</td>\n",
              "      <td>6.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             FTHG        FTAG\n",
              "count  153.000000  153.000000\n",
              "mean     1.901961    1.196078\n",
              "std      1.454416    1.197908\n",
              "min      0.000000    0.000000\n",
              "25%      1.000000    0.000000\n",
              "50%      2.000000    1.000000\n",
              "75%      3.000000    2.000000\n",
              "max      7.000000    6.000000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "metadata": {
        "id": "Yi1g3htco3st",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "c3bcc5e2-700d-4b5c-a7b8-a379f78d367c"
      },
      "cell_type": "code",
      "source": [
        "x_train.head()"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>FTHG</th>\n",
              "      <th>FTAG</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3448</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>854</th>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3338</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3053</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      FTHG  FTAG\n",
              "3448     3     0\n",
              "116      0     2\n",
              "854      0     3\n",
              "3338     1     1\n",
              "3053     2     0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        }
      ]
    },
    {
      "metadata": {
        "id": "6VRcJQxqpInl",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "bf9a3c20-afe1-4c29-de53-452fccdf82d1"
      },
      "cell_type": "code",
      "source": [
        "x_eval.head()"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>FTHG</th>\n",
              "      <th>FTAG</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>6420</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1093</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1143</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4102</th>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3851</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      FTHG  FTAG\n",
              "6420     0     4\n",
              "1093     1     0\n",
              "1143     3     0\n",
              "4102     3     1\n",
              "3851     0     0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "metadata": {
        "id": "g5fkf_HZaj2u",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "26f4b36b-f104-4e11-d776-116320d0a5f0"
      },
      "cell_type": "code",
      "source": [
        "x_test.head()"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>FTHG</th>\n",
              "      <th>FTAG</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>85</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>138</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>149</th>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     FTHG  FTAG\n",
              "32      2     1\n",
              "85      1     1\n",
              "129     2     1\n",
              "138     0     4\n",
              "149     3     1"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "metadata": {
        "id": "udjYU2TaCClX",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "def input_fn(features, targets, batch_size=1, shuffle=True, num_epochs=None):\n",
        "    \"\"\"Trains a linear regression model of one feature.\n",
        "  \n",
        "    Args:\n",
        "      features: pandas DataFrame of features\n",
        "      targets: pandas DataFrame of targets\n",
        "      batch_size: Size of batches to be passed to the model\n",
        "      shuffle: True or False. Whether to shuffle the data.\n",
        "      num_epochs: Number of epochs for which data should be repeated. None = repeat indefinitely\n",
        "    Returns:\n",
        "      Tuple of (features, labels) for next data batch\n",
        "    \"\"\"\n",
        " \n",
        "    # Construct a dataset, and configure batching/repeating\n",
        "    features = {key:np.array(value) for key,value in dict(features).items()} \n",
        "  \n",
        "    ds = Dataset.from_tensor_slices((features, targets))\n",
        "    ds = ds.batch(batch_size).repeat(num_epochs)\n",
        "    \n",
        "    # Shuffle the data, if specified\n",
        "    if shuffle:\n",
        "      ds = ds.shuffle(buffer_size=10000)\n",
        "    \n",
        "    # Return the next batch of data\n",
        "    features, labels = ds.make_one_shot_iterator().get_next()\n",
        "    return features, labels"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "XauzWrcNCh0J",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "train_input_fn = lambda: input_fn(x_train, y_train)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "MUKqyBqocZJ_",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "train_predict_input_fn = lambda: input_fn(x_eval, y_eval, num_epochs=1, shuffle=False)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "_QCb9zcOCf3A",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "eval_predict_input_fn = lambda: input_fn(x_eval, y_eval, num_epochs=1, shuffle=False)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "YXjdJK8zbfW5",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "test_predict_input_fun = lambda: input_fn(x_test, y_test, num_epochs=1, shuffle=False)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "_rvAbHuFjCND",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "STEPS = 5000  # Steps of train loop.\n",
        "HIDDEN = [1000, 1000, 1000, 1000]\n",
        "PERIODS = 10\n",
        "STEPS_PER_PERIOD = STEPS / PERIODS"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "3AkQHk0ObqPJ",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "O4Fyeywlz4dm",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "feature_cols = [\n",
        "  tf.feature_column.numeric_column(\"FTHG\"),\n",
        "  tf.feature_column.numeric_column(\"FTAG\")\n",
        "]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "wR1wAHC0b8R5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 88
        },
        "outputId": "0ca1c4bf-e4c8-435b-e797-30a0e840a3d3"
      },
      "cell_type": "code",
      "source": [
        "model = tf.estimator.DNNClassifier(\n",
        "    feature_columns = feature_cols,\n",
        "    hidden_units = HIDDEN,\n",
        "    n_classes = len(result_classes)\n",
        ")"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Using default config.\n",
            "WARNING:tensorflow:Using temporary folder as model directory: /tmp/tmp_n7zs7x5\n",
            "INFO:tensorflow:Using config: {'_model_dir': '/tmp/tmp_n7zs7x5', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': None, '_save_checkpoints_secs': 600, '_session_config': None, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f81cd2b94a8>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "xibCYiz3by1B",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 18530
        },
        "outputId": "6f67dae8-dcbd-4fc4-be1a-b7cac7291f5b"
      },
      "cell_type": "code",
      "source": [
        "for period in range(0, PERIODS):\n",
        "  model.train(input_fn=train_input_fn, steps=STEPS)\n",
        "  train_predict = model.predict(input_fn=train_predict_input_fn)\n",
        "  eval_predict = model.predict(input_fn=eval_predict_input_fn)"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Calling model_fn.\n",
            "INFO:tensorflow:Done calling model_fn.\n",
            "INFO:tensorflow:Create CheckpointSaverHook.\n",
            "INFO:tensorflow:Graph was finalized.\n",
            "INFO:tensorflow:Running local_init_op.\n",
            "INFO:tensorflow:Done running local_init_op.\n",
            "INFO:tensorflow:Saving checkpoints for 0 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:loss = 1.1167, step = 0\n",
            "INFO:tensorflow:global_step/sec: 98.5606\n",
            "INFO:tensorflow:loss = 0.00038354192, step = 100 (1.016 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.384\n",
            "INFO:tensorflow:loss = 0.22785199, step = 200 (0.836 sec)\n",
            "INFO:tensorflow:global_step/sec: 119.546\n",
            "INFO:tensorflow:loss = 0.013675098, step = 300 (0.833 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.117\n",
            "INFO:tensorflow:loss = 2.384183e-06, step = 400 (0.824 sec)\n",
            "INFO:tensorflow:global_step/sec: 126.67\n",
            "INFO:tensorflow:loss = 0.000547021, step = 500 (0.794 sec)\n",
            "INFO:tensorflow:global_step/sec: 113.77\n",
            "INFO:tensorflow:loss = 0.002286084, step = 600 (0.877 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.086\n",
            "INFO:tensorflow:loss = 0.0, step = 700 (0.833 sec)\n",
            "INFO:tensorflow:global_step/sec: 125.001\n",
            "INFO:tensorflow:loss = 0.0033391928, step = 800 (0.802 sec)\n",
            "INFO:tensorflow:global_step/sec: 119.824\n",
            "INFO:tensorflow:loss = 0.0002512616, step = 900 (0.832 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.486\n",
            "INFO:tensorflow:loss = 0.0, step = 1000 (0.813 sec)\n",
            "INFO:tensorflow:global_step/sec: 118.13\n",
            "INFO:tensorflow:loss = 0.002039854, step = 1100 (0.847 sec)\n",
            "INFO:tensorflow:global_step/sec: 128.206\n",
            "INFO:tensorflow:loss = 9.4051706e-05, step = 1200 (0.782 sec)\n",
            "INFO:tensorflow:global_step/sec: 125.57\n",
            "INFO:tensorflow:loss = 0.0, step = 1300 (0.800 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.01\n",
            "INFO:tensorflow:loss = 0.00022742547, step = 1400 (0.819 sec)\n",
            "INFO:tensorflow:global_step/sec: 119.914\n",
            "INFO:tensorflow:loss = 0.0, step = 1500 (0.835 sec)\n",
            "INFO:tensorflow:global_step/sec: 125.625\n",
            "INFO:tensorflow:loss = 0.0012872275, step = 1600 (0.800 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.584\n",
            "INFO:tensorflow:loss = 0.0, step = 1700 (0.820 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.08\n",
            "INFO:tensorflow:loss = 0.0, step = 1800 (0.837 sec)\n",
            "INFO:tensorflow:global_step/sec: 129.742\n",
            "INFO:tensorflow:loss = 0.0, step = 1900 (0.772 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.081\n",
            "INFO:tensorflow:loss = 0.0, step = 2000 (0.819 sec)\n",
            "INFO:tensorflow:global_step/sec: 117.568\n",
            "INFO:tensorflow:loss = 0.0, step = 2100 (0.850 sec)\n",
            "INFO:tensorflow:global_step/sec: 119.848\n",
            "INFO:tensorflow:loss = 3.5404533e-05, step = 2200 (0.836 sec)\n",
            "INFO:tensorflow:global_step/sec: 123.767\n",
            "INFO:tensorflow:loss = 0.0, step = 2300 (0.802 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.045\n",
            "INFO:tensorflow:loss = 7.283422e-05, step = 2400 (0.838 sec)\n",
            "INFO:tensorflow:global_step/sec: 125.899\n",
            "INFO:tensorflow:loss = 0.00018475733, step = 2500 (0.794 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.588\n",
            "INFO:tensorflow:loss = 0.0, step = 2600 (0.814 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.179\n",
            "INFO:tensorflow:loss = 0.00016175392, step = 2700 (0.830 sec)\n",
            "INFO:tensorflow:global_step/sec: 117.793\n",
            "INFO:tensorflow:loss = 0.00015114596, step = 2800 (0.842 sec)\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:global_step/sec: 117.949\n",
            "INFO:tensorflow:loss = 0.00014447123, step = 2900 (0.850 sec)\n",
            "INFO:tensorflow:global_step/sec: 129.179\n",
            "INFO:tensorflow:loss = 0.0, step = 3000 (0.778 sec)\n",
            "INFO:tensorflow:global_step/sec: 124.073\n",
            "INFO:tensorflow:loss = 4.3272037e-05, step = 3100 (0.805 sec)\n",
            "INFO:tensorflow:global_step/sec: 118.452\n",
            "INFO:tensorflow:loss = 0.0, step = 3200 (0.844 sec)\n",
            "INFO:tensorflow:global_step/sec: 125.032\n",
            "INFO:tensorflow:loss = 2.1815062e-05, step = 3300 (0.799 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.007\n",
            "INFO:tensorflow:loss = 0.0, step = 3400 (0.820 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.093\n",
            "INFO:tensorflow:loss = 0.00011860621, step = 3500 (0.814 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.904\n",
            "INFO:tensorflow:loss = 3.3616456e-05, step = 3600 (0.827 sec)\n",
            "INFO:tensorflow:global_step/sec: 125.297\n",
            "INFO:tensorflow:loss = 0.0, step = 3700 (0.792 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.431\n",
            "INFO:tensorflow:loss = 1.6808368e-05, step = 3800 (0.830 sec)\n",
            "INFO:tensorflow:global_step/sec: 126.671\n",
            "INFO:tensorflow:loss = 2.9444262e-05, step = 3900 (0.789 sec)\n",
            "INFO:tensorflow:global_step/sec: 123.992\n",
            "INFO:tensorflow:loss = 8.6423e-05, step = 4000 (0.807 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.04\n",
            "INFO:tensorflow:loss = 3.9099883e-05, step = 4100 (0.826 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.458\n",
            "INFO:tensorflow:loss = 0.00036840804, step = 4200 (0.827 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.454\n",
            "INFO:tensorflow:loss = 2.396078e-05, step = 4300 (0.819 sec)\n",
            "INFO:tensorflow:global_step/sec: 124.055\n",
            "INFO:tensorflow:loss = 5.125868e-05, step = 4400 (0.804 sec)\n",
            "INFO:tensorflow:global_step/sec: 123.592\n",
            "INFO:tensorflow:loss = 1.3470559e-05, step = 4500 (0.806 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.376\n",
            "INFO:tensorflow:loss = 8.821448e-06, step = 4600 (0.828 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.985\n",
            "INFO:tensorflow:loss = 8.344616e-06, step = 4700 (0.820 sec)\n",
            "INFO:tensorflow:global_step/sec: 127.331\n",
            "INFO:tensorflow:loss = 2.0861407e-05, step = 4800 (0.786 sec)\n",
            "INFO:tensorflow:global_step/sec: 115.486\n",
            "INFO:tensorflow:loss = 7.199982e-05, step = 4900 (0.864 sec)\n",
            "INFO:tensorflow:Saving checkpoints for 5000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:Loss for final step: 2.0146166e-05.\n",
            "INFO:tensorflow:Calling model_fn.\n",
            "INFO:tensorflow:Done calling model_fn.\n",
            "INFO:tensorflow:Create CheckpointSaverHook.\n",
            "INFO:tensorflow:Graph was finalized.\n",
            "INFO:tensorflow:Restoring parameters from /tmp/tmp_n7zs7x5/model.ckpt-5000\n",
            "INFO:tensorflow:Running local_init_op.\n",
            "INFO:tensorflow:Done running local_init_op.\n",
            "INFO:tensorflow:Saving checkpoints for 5000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:loss = 1.1682442e-05, step = 5000\n",
            "INFO:tensorflow:global_step/sec: 101.993\n",
            "INFO:tensorflow:loss = 0.00029428443, step = 5100 (0.988 sec)\n",
            "INFO:tensorflow:global_step/sec: 117.644\n",
            "INFO:tensorflow:loss = 5.876845e-05, step = 5200 (0.849 sec)\n",
            "INFO:tensorflow:global_step/sec: 119.529\n",
            "INFO:tensorflow:loss = 6.603976e-05, step = 5300 (0.835 sec)\n",
            "INFO:tensorflow:global_step/sec: 115.294\n",
            "INFO:tensorflow:loss = 0.0, step = 5400 (0.865 sec)\n",
            "INFO:tensorflow:global_step/sec: 126.4\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:loss = 5.4953973e-05, step = 5500 (0.792 sec)\n",
            "INFO:tensorflow:global_step/sec: 119.43\n",
            "INFO:tensorflow:loss = 5.3404336e-05, step = 5600 (0.836 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.044\n",
            "INFO:tensorflow:loss = 0.0, step = 5700 (0.828 sec)\n",
            "INFO:tensorflow:global_step/sec: 125.458\n",
            "INFO:tensorflow:loss = 5.0662664e-05, step = 5800 (0.799 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.681\n",
            "INFO:tensorflow:loss = 4.9709037e-05, step = 5900 (0.811 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.38\n",
            "INFO:tensorflow:loss = 0.0, step = 6000 (0.819 sec)\n",
            "INFO:tensorflow:global_step/sec: 123.117\n",
            "INFO:tensorflow:loss = 0.0, step = 6100 (0.815 sec)\n",
            "INFO:tensorflow:global_step/sec: 123.803\n",
            "INFO:tensorflow:loss = 0.0, step = 6200 (0.810 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.592\n",
            "INFO:tensorflow:loss = 3.3139633e-05, step = 6300 (0.809 sec)\n",
            "INFO:tensorflow:global_step/sec: 123.86\n",
            "INFO:tensorflow:loss = 0.0, step = 6400 (0.815 sec)\n",
            "INFO:tensorflow:global_step/sec: 125.352\n",
            "INFO:tensorflow:loss = 0.0, step = 6500 (0.795 sec)\n",
            "INFO:tensorflow:global_step/sec: 127.605\n",
            "INFO:tensorflow:loss = 5.0066647e-05, step = 6600 (0.787 sec)\n",
            "INFO:tensorflow:global_step/sec: 123.059\n",
            "INFO:tensorflow:loss = 4.136477e-05, step = 6700 (0.805 sec)\n",
            "INFO:tensorflow:global_step/sec: 129.447\n",
            "INFO:tensorflow:loss = 0.0, step = 6800 (0.771 sec)\n",
            "INFO:tensorflow:global_step/sec: 123.855\n",
            "INFO:tensorflow:loss = 2.9563467e-05, step = 6900 (0.813 sec)\n",
            "INFO:tensorflow:global_step/sec: 119.924\n",
            "INFO:tensorflow:loss = 0.0, step = 7000 (0.838 sec)\n",
            "INFO:tensorflow:global_step/sec: 126.425\n",
            "INFO:tensorflow:loss = 0.0, step = 7100 (0.788 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.563\n",
            "INFO:tensorflow:loss = 3.778863e-05, step = 7200 (0.824 sec)\n",
            "INFO:tensorflow:global_step/sec: 119.046\n",
            "INFO:tensorflow:loss = 1.2159274e-05, step = 7300 (0.844 sec)\n",
            "INFO:tensorflow:global_step/sec: 123.664\n",
            "INFO:tensorflow:loss = 0.0, step = 7400 (0.808 sec)\n",
            "INFO:tensorflow:global_step/sec: 128.778\n",
            "INFO:tensorflow:loss = 0.00018475733, step = 7500 (0.776 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.806\n",
            "INFO:tensorflow:loss = 1.1563234e-05, step = 7600 (0.821 sec)\n",
            "INFO:tensorflow:global_step/sec: 118.245\n",
            "INFO:tensorflow:loss = 0.0, step = 7700 (0.845 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.622\n",
            "INFO:tensorflow:loss = 3.3139633e-05, step = 7800 (0.826 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.313\n",
            "INFO:tensorflow:loss = 9.536698e-06, step = 7900 (0.824 sec)\n",
            "INFO:tensorflow:global_step/sec: 124.89\n",
            "INFO:tensorflow:loss = 3.194758e-05, step = 8000 (0.800 sec)\n",
            "INFO:tensorflow:global_step/sec: 128.033\n",
            "INFO:tensorflow:loss = 6.079655e-06, step = 8100 (0.785 sec)\n",
            "INFO:tensorflow:global_step/sec: 115.748\n",
            "INFO:tensorflow:loss = 0.00016366097, step = 8200 (0.859 sec)\n",
            "INFO:tensorflow:global_step/sec: 118.033\n",
            "INFO:tensorflow:loss = 3.886147e-05, step = 8300 (0.852 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.465\n",
            "INFO:tensorflow:loss = 0.0, step = 8400 (0.820 sec)\n",
            "INFO:tensorflow:global_step/sec: 123.8\n",
            "INFO:tensorflow:loss = 0.0, step = 8500 (0.812 sec)\n",
            "INFO:tensorflow:global_step/sec: 125.429\n",
            "INFO:tensorflow:loss = 5.7220295e-06, step = 8600 (0.796 sec)\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:global_step/sec: 121.377\n",
            "INFO:tensorflow:loss = 7.867782e-06, step = 8700 (0.819 sec)\n",
            "INFO:tensorflow:global_step/sec: 123.932\n",
            "INFO:tensorflow:loss = 0.0, step = 8800 (0.810 sec)\n",
            "INFO:tensorflow:global_step/sec: 132.641\n",
            "INFO:tensorflow:loss = 2.7179349e-05, step = 8900 (0.755 sec)\n",
            "INFO:tensorflow:global_step/sec: 116.781\n",
            "INFO:tensorflow:loss = 3.6000558e-05, step = 9000 (0.853 sec)\n",
            "INFO:tensorflow:global_step/sec: 119.033\n",
            "INFO:tensorflow:loss = 5.1259863e-06, step = 9100 (0.845 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.096\n",
            "INFO:tensorflow:loss = 0.0, step = 9200 (0.833 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.971\n",
            "INFO:tensorflow:loss = 9.298281e-06, step = 9300 (0.814 sec)\n",
            "INFO:tensorflow:global_step/sec: 124.409\n",
            "INFO:tensorflow:loss = 8.821448e-06, step = 9400 (0.801 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.546\n",
            "INFO:tensorflow:loss = 7.152532e-06, step = 9500 (0.821 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.367\n",
            "INFO:tensorflow:loss = 2.4556812e-05, step = 9600 (0.826 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.426\n",
            "INFO:tensorflow:loss = 4.6491514e-06, step = 9700 (0.824 sec)\n",
            "INFO:tensorflow:global_step/sec: 127.479\n",
            "INFO:tensorflow:loss = 0.0, step = 9800 (0.783 sec)\n",
            "INFO:tensorflow:global_step/sec: 117.983\n",
            "INFO:tensorflow:loss = 6.675698e-06, step = 9900 (0.845 sec)\n",
            "INFO:tensorflow:Saving checkpoints for 10000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:Loss for final step: 4.5299425e-06.\n",
            "INFO:tensorflow:Calling model_fn.\n",
            "INFO:tensorflow:Done calling model_fn.\n",
            "INFO:tensorflow:Create CheckpointSaverHook.\n",
            "INFO:tensorflow:Graph was finalized.\n",
            "INFO:tensorflow:Restoring parameters from /tmp/tmp_n7zs7x5/model.ckpt-10000\n",
            "INFO:tensorflow:Running local_init_op.\n",
            "INFO:tensorflow:Done running local_init_op.\n",
            "INFO:tensorflow:Saving checkpoints for 10000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:loss = 2.3483954e-05, step = 10000\n",
            "INFO:tensorflow:global_step/sec: 101.893\n",
            "INFO:tensorflow:loss = 0.0, step = 10100 (0.983 sec)\n",
            "INFO:tensorflow:global_step/sec: 123.508\n",
            "INFO:tensorflow:loss = 4.410734e-06, step = 10200 (0.814 sec)\n",
            "INFO:tensorflow:global_step/sec: 124.176\n",
            "INFO:tensorflow:loss = 4.410734e-06, step = 10300 (0.807 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.196\n",
            "INFO:tensorflow:loss = 6.3180723e-06, step = 10400 (0.823 sec)\n",
            "INFO:tensorflow:global_step/sec: 124.905\n",
            "INFO:tensorflow:loss = 4.2915253e-06, step = 10500 (0.797 sec)\n",
            "INFO:tensorflow:global_step/sec: 118.074\n",
            "INFO:tensorflow:loss = 1.800044e-05, step = 10600 (0.849 sec)\n",
            "INFO:tensorflow:global_step/sec: 118.656\n",
            "INFO:tensorflow:loss = 7.6293654e-06, step = 10700 (0.840 sec)\n",
            "INFO:tensorflow:global_step/sec: 125.776\n",
            "INFO:tensorflow:loss = 2.8490615e-05, step = 10800 (0.798 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.559\n",
            "INFO:tensorflow:loss = 2.801379e-05, step = 10900 (0.817 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.831\n",
            "INFO:tensorflow:loss = 0.0, step = 11000 (0.810 sec)\n",
            "INFO:tensorflow:global_step/sec: 125.64\n",
            "INFO:tensorflow:loss = 0.0, step = 11100 (0.799 sec)\n",
            "INFO:tensorflow:global_step/sec: 128.845\n",
            "INFO:tensorflow:loss = 2.741776e-05, step = 11200 (0.778 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.235\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:loss = 0.0, step = 11300 (0.818 sec)\n",
            "INFO:tensorflow:global_step/sec: 126.261\n",
            "INFO:tensorflow:loss = 0.0, step = 11400 (0.791 sec)\n",
            "INFO:tensorflow:global_step/sec: 118.353\n",
            "INFO:tensorflow:loss = 5.3644035e-06, step = 11500 (0.847 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.491\n",
            "INFO:tensorflow:loss = 0.0, step = 11600 (0.823 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.715\n",
            "INFO:tensorflow:loss = 5.3644035e-06, step = 11700 (0.815 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.436\n",
            "INFO:tensorflow:loss = 0.0, step = 11800 (0.823 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.55\n",
            "INFO:tensorflow:loss = 5.1259863e-06, step = 11900 (0.829 sec)\n",
            "INFO:tensorflow:global_step/sec: 124.071\n",
            "INFO:tensorflow:loss = 6.3180723e-06, step = 12000 (0.805 sec)\n",
            "INFO:tensorflow:global_step/sec: 117.062\n",
            "INFO:tensorflow:loss = 0.0, step = 12100 (0.856 sec)\n",
            "INFO:tensorflow:global_step/sec: 122.984\n",
            "INFO:tensorflow:loss = 1.5258673e-05, step = 12200 (0.807 sec)\n",
            "INFO:tensorflow:global_step/sec: 117.482\n",
            "INFO:tensorflow:loss = 3.5762723e-06, step = 12300 (0.855 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.369\n",
            "INFO:tensorflow:loss = 0.0, step = 12400 (0.829 sec)\n",
            "INFO:tensorflow:global_step/sec: 116.116\n",
            "INFO:tensorflow:loss = 0.0, step = 12500 (0.867 sec)\n",
            "INFO:tensorflow:global_step/sec: 124.221\n",
            "INFO:tensorflow:loss = 3.81469e-06, step = 12600 (0.801 sec)\n",
            "INFO:tensorflow:global_step/sec: 121.563\n",
            "INFO:tensorflow:loss = 3.3378547e-06, step = 12700 (0.821 sec)\n",
            "INFO:tensorflow:global_step/sec: 128.09\n",
            "INFO:tensorflow:loss = 9.7751135e-06, step = 12800 (0.785 sec)\n",
            "INFO:tensorflow:global_step/sec: 119.037\n",
            "INFO:tensorflow:loss = 0.0, step = 12900 (0.835 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.66\n",
            "INFO:tensorflow:loss = 3.2186456e-06, step = 13000 (0.828 sec)\n",
            "INFO:tensorflow:global_step/sec: 120.4\n",
            "INFO:tensorflow:loss = 0.0, step = 13100 (0.833 sec)\n",
            "INFO:tensorflow:global_step/sec: 127.137\n",
            "INFO:tensorflow:loss = 0.0, step = 13200 (0.784 sec)\n",
            "INFO:tensorflow:global_step/sec: 118.398\n",
            "INFO:tensorflow:loss = 0.0, step = 13300 (0.846 sec)\n",
            "INFO:tensorflow:global_step/sec: 137.318\n",
            "INFO:tensorflow:loss = 0.0, step = 13400 (0.727 sec)\n",
            "INFO:tensorflow:global_step/sec: 229.276\n",
            "INFO:tensorflow:loss = 1.3113013e-06, step = 13500 (0.445 sec)\n",
            "INFO:tensorflow:global_step/sec: 244.896\n",
            "INFO:tensorflow:loss = 0.0, step = 13600 (0.403 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.888\n",
            "INFO:tensorflow:loss = 0.0, step = 13700 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 241.612\n",
            "INFO:tensorflow:loss = 0.0, step = 13800 (0.415 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.323\n",
            "INFO:tensorflow:loss = 2.1338235e-05, step = 13900 (0.393 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.983\n",
            "INFO:tensorflow:loss = 1.5139465e-05, step = 14000 (0.402 sec)\n",
            "INFO:tensorflow:global_step/sec: 236.961\n",
            "INFO:tensorflow:loss = 1.2636105e-05, step = 14100 (0.423 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.745\n",
            "INFO:tensorflow:loss = 0.0, step = 14200 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.326\n",
            "INFO:tensorflow:loss = 0.0, step = 14300 (0.401 sec)\n",
            "INFO:tensorflow:global_step/sec: 244.145\n",
            "INFO:tensorflow:loss = 1.239769e-05, step = 14400 (0.406 sec)\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:global_step/sec: 252.914\n",
            "INFO:tensorflow:loss = 0.0, step = 14500 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.292\n",
            "INFO:tensorflow:loss = 2.7418098e-06, step = 14600 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 240.38\n",
            "INFO:tensorflow:loss = 5.0067774e-06, step = 14700 (0.417 sec)\n",
            "INFO:tensorflow:global_step/sec: 255.367\n",
            "INFO:tensorflow:loss = 0.0, step = 14800 (0.388 sec)\n",
            "INFO:tensorflow:global_step/sec: 256.242\n",
            "INFO:tensorflow:loss = 2.8610189e-06, step = 14900 (0.395 sec)\n",
            "INFO:tensorflow:Saving checkpoints for 15000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:Loss for final step: 4.887569e-06.\n",
            "INFO:tensorflow:Calling model_fn.\n",
            "INFO:tensorflow:Done calling model_fn.\n",
            "INFO:tensorflow:Create CheckpointSaverHook.\n",
            "INFO:tensorflow:Graph was finalized.\n",
            "INFO:tensorflow:Restoring parameters from /tmp/tmp_n7zs7x5/model.ckpt-15000\n",
            "INFO:tensorflow:Running local_init_op.\n",
            "INFO:tensorflow:Done running local_init_op.\n",
            "INFO:tensorflow:Saving checkpoints for 15000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:loss = 0.0, step = 15000\n",
            "INFO:tensorflow:global_step/sec: 213.41\n",
            "INFO:tensorflow:loss = 1.1563234e-05, step = 15100 (0.475 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.217\n",
            "INFO:tensorflow:loss = 0.0, step = 15200 (0.403 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.012\n",
            "INFO:tensorflow:loss = 0.0, step = 15300 (0.419 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.084\n",
            "INFO:tensorflow:loss = 2.503392e-06, step = 15400 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.654\n",
            "INFO:tensorflow:loss = 0.0, step = 15500 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.863\n",
            "INFO:tensorflow:loss = 2.503392e-06, step = 15600 (0.420 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.947\n",
            "INFO:tensorflow:loss = 1.1086402e-05, step = 15700 (0.393 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.708\n",
            "INFO:tensorflow:loss = 0.0, step = 15800 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 235.085\n",
            "INFO:tensorflow:loss = 4.6491514e-06, step = 15900 (0.423 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.204\n",
            "INFO:tensorflow:loss = 2.384183e-06, step = 16000 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.509\n",
            "INFO:tensorflow:loss = 1.7881233e-05, step = 16100 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.716\n",
            "INFO:tensorflow:loss = 4.5299425e-06, step = 16200 (0.420 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.083\n",
            "INFO:tensorflow:loss = 2.503392e-06, step = 16300 (0.401 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.17\n",
            "INFO:tensorflow:loss = 7.605264e-05, step = 16400 (0.394 sec)\n",
            "INFO:tensorflow:global_step/sec: 234.911\n",
            "INFO:tensorflow:loss = 0.0, step = 16500 (0.427 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.295\n",
            "INFO:tensorflow:loss = 4.2915253e-06, step = 16600 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.979\n",
            "INFO:tensorflow:loss = 4.6491514e-06, step = 16700 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.021\n",
            "INFO:tensorflow:loss = 0.0, step = 16800 (0.395 sec)\n",
            "INFO:tensorflow:global_step/sec: 243.17\n",
            "INFO:tensorflow:loss = 0.0, step = 16900 (0.410 sec)\n",
            "INFO:tensorflow:global_step/sec: 255.403\n",
            "INFO:tensorflow:loss = 0.0, step = 17000 (0.392 sec)\n",
            "INFO:tensorflow:global_step/sec: 255.343\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:loss = 1.6927575e-05, step = 17100 (0.394 sec)\n",
            "INFO:tensorflow:global_step/sec: 236.211\n",
            "INFO:tensorflow:loss = 0.0, step = 17200 (0.420 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.583\n",
            "INFO:tensorflow:loss = 0.0, step = 17300 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.209\n",
            "INFO:tensorflow:loss = 0.0, step = 17400 (0.409 sec)\n",
            "INFO:tensorflow:global_step/sec: 236.195\n",
            "INFO:tensorflow:loss = 7.0211805e-05, step = 17500 (0.421 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.169\n",
            "INFO:tensorflow:loss = 2.8610189e-06, step = 17600 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 246.228\n",
            "INFO:tensorflow:loss = 0.0, step = 17700 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 240.801\n",
            "INFO:tensorflow:loss = 0.0, step = 17800 (0.414 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.857\n",
            "INFO:tensorflow:loss = 1.0728779e-05, step = 17900 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.4\n",
            "INFO:tensorflow:loss = 2.7418098e-06, step = 18000 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 243.016\n",
            "INFO:tensorflow:loss = 2.0265559e-06, step = 18100 (0.411 sec)\n",
            "INFO:tensorflow:global_step/sec: 254.242\n",
            "INFO:tensorflow:loss = 6.699338e-05, step = 18200 (0.394 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.446\n",
            "INFO:tensorflow:loss = 1.0251946e-05, step = 18300 (0.394 sec)\n",
            "INFO:tensorflow:global_step/sec: 243.657\n",
            "INFO:tensorflow:loss = 2.622601e-06, step = 18400 (0.414 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.679\n",
            "INFO:tensorflow:loss = 9.298281e-06, step = 18500 (0.394 sec)\n",
            "INFO:tensorflow:global_step/sec: 255.205\n",
            "INFO:tensorflow:loss = 3.81469e-06, step = 18600 (0.390 sec)\n",
            "INFO:tensorflow:global_step/sec: 242.675\n",
            "INFO:tensorflow:loss = 0.0, step = 18700 (0.414 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.628\n",
            "INFO:tensorflow:loss = 1.001353e-05, step = 18800 (0.391 sec)\n",
            "INFO:tensorflow:global_step/sec: 254.557\n",
            "INFO:tensorflow:loss = 1.9073468e-06, step = 18900 (0.392 sec)\n",
            "INFO:tensorflow:global_step/sec: 246.714\n",
            "INFO:tensorflow:loss = 0.0, step = 19000 (0.406 sec)\n",
            "INFO:tensorflow:global_step/sec: 255.702\n",
            "INFO:tensorflow:loss = 2.503392e-06, step = 19100 (0.391 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.613\n",
            "INFO:tensorflow:loss = 9.7751135e-06, step = 19200 (0.398 sec)\n",
            "INFO:tensorflow:global_step/sec: 241.97\n",
            "INFO:tensorflow:loss = 0.0, step = 19300 (0.412 sec)\n",
            "INFO:tensorflow:global_step/sec: 254.635\n",
            "INFO:tensorflow:loss = 3.6954812e-06, step = 19400 (0.391 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.389\n",
            "INFO:tensorflow:loss = 1.9073468e-06, step = 19500 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 254.221\n",
            "INFO:tensorflow:loss = 0.0, step = 19600 (0.395 sec)\n",
            "INFO:tensorflow:global_step/sec: 242.587\n",
            "INFO:tensorflow:loss = 3.81469e-06, step = 19700 (0.409 sec)\n",
            "INFO:tensorflow:global_step/sec: 255.631\n",
            "INFO:tensorflow:loss = 6.0437284e-05, step = 19800 (0.394 sec)\n",
            "INFO:tensorflow:global_step/sec: 255.425\n",
            "INFO:tensorflow:loss = 2.145765e-06, step = 19900 (0.392 sec)\n",
            "INFO:tensorflow:Saving checkpoints for 20000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:Loss for final step: 0.0.\n",
            "INFO:tensorflow:Calling model_fn.\n",
            "INFO:tensorflow:Done calling model_fn.\n",
            "INFO:tensorflow:Create CheckpointSaverHook.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Graph was finalized.\n",
            "INFO:tensorflow:Restoring parameters from /tmp/tmp_n7zs7x5/model.ckpt-20000\n",
            "INFO:tensorflow:Running local_init_op.\n",
            "INFO:tensorflow:Done running local_init_op.\n",
            "INFO:tensorflow:Saving checkpoints for 20000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:loss = 0.0, step = 20000\n",
            "INFO:tensorflow:global_step/sec: 214.12\n",
            "INFO:tensorflow:loss = 1.7881378e-06, step = 20100 (0.473 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.464\n",
            "INFO:tensorflow:loss = 2.264974e-06, step = 20200 (0.417 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.934\n",
            "INFO:tensorflow:loss = 1.7881378e-06, step = 20300 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 246.169\n",
            "INFO:tensorflow:loss = 0.0, step = 20400 (0.407 sec)\n",
            "INFO:tensorflow:global_step/sec: 240.535\n",
            "INFO:tensorflow:loss = 8.344616e-06, step = 20500 (0.415 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.623\n",
            "INFO:tensorflow:loss = 1.7881378e-06, step = 20600 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.489\n",
            "INFO:tensorflow:loss = 0.0, step = 20700 (0.402 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.136\n",
            "INFO:tensorflow:loss = 0.0, step = 20800 (0.423 sec)\n",
            "INFO:tensorflow:global_step/sec: 246.981\n",
            "INFO:tensorflow:loss = 0.0, step = 20900 (0.405 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.132\n",
            "INFO:tensorflow:loss = 0.0, step = 21000 (0.398 sec)\n",
            "INFO:tensorflow:global_step/sec: 236.146\n",
            "INFO:tensorflow:loss = 5.960463e-07, step = 21100 (0.425 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.101\n",
            "INFO:tensorflow:loss = 5.566919e-05, step = 21200 (0.398 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.57\n",
            "INFO:tensorflow:loss = 7.986991e-06, step = 21300 (0.405 sec)\n",
            "INFO:tensorflow:global_step/sec: 235.193\n",
            "INFO:tensorflow:loss = 0.0, step = 21400 (0.422 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.017\n",
            "INFO:tensorflow:loss = 2.0265559e-06, step = 21500 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.02\n",
            "INFO:tensorflow:loss = 5.447716e-05, step = 21600 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.319\n",
            "INFO:tensorflow:loss = 0.0, step = 21700 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.932\n",
            "INFO:tensorflow:loss = 0.0, step = 21800 (0.420 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.602\n",
            "INFO:tensorflow:loss = 3.0994368e-06, step = 21900 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 255.033\n",
            "INFO:tensorflow:loss = 2.0265559e-06, step = 22000 (0.393 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.458\n",
            "INFO:tensorflow:loss = 5.960463e-07, step = 22100 (0.416 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.072\n",
            "INFO:tensorflow:loss = 5.2808322e-05, step = 22200 (0.408 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.133\n",
            "INFO:tensorflow:loss = 1.9073468e-06, step = 22300 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 234.49\n",
            "INFO:tensorflow:loss = 2.0265559e-06, step = 22400 (0.427 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.369\n",
            "INFO:tensorflow:loss = 2.9802277e-06, step = 22500 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.65\n",
            "INFO:tensorflow:loss = 0.0, step = 22600 (0.401 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.344\n",
            "INFO:tensorflow:loss = 0.0, step = 22700 (0.421 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.56\n",
            "INFO:tensorflow:loss = 0.0, step = 22800 (0.399 sec)\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:global_step/sec: 250.212\n",
            "INFO:tensorflow:loss = 0.0, step = 22900 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 241.526\n",
            "INFO:tensorflow:loss = 4.7683704e-07, step = 23000 (0.413 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.025\n",
            "INFO:tensorflow:loss = 5.0067774e-06, step = 23100 (0.403 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.135\n",
            "INFO:tensorflow:loss = 0.0, step = 23200 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 240.673\n",
            "INFO:tensorflow:loss = 4.7683704e-07, step = 23300 (0.415 sec)\n",
            "INFO:tensorflow:global_step/sec: 246.226\n",
            "INFO:tensorflow:loss = 0.0, step = 23400 (0.405 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.877\n",
            "INFO:tensorflow:loss = 0.0, step = 23500 (0.401 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.57\n",
            "INFO:tensorflow:loss = 7.152532e-06, step = 23600 (0.422 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.726\n",
            "INFO:tensorflow:loss = 0.0, step = 23700 (0.405 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.179\n",
            "INFO:tensorflow:loss = 0.0, step = 23800 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.83\n",
            "INFO:tensorflow:loss = 7.2717403e-06, step = 23900 (0.417 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.436\n",
            "INFO:tensorflow:loss = 4.8517002e-05, step = 24000 (0.395 sec)\n",
            "INFO:tensorflow:global_step/sec: 244.561\n",
            "INFO:tensorflow:loss = 1.6689287e-06, step = 24100 (0.409 sec)\n",
            "INFO:tensorflow:global_step/sec: 246.124\n",
            "INFO:tensorflow:loss = 7.152532e-06, step = 24200 (0.406 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.469\n",
            "INFO:tensorflow:loss = 0.0, step = 24300 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.14\n",
            "INFO:tensorflow:loss = 0.0, step = 24400 (0.405 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.127\n",
            "INFO:tensorflow:loss = 6.9141147e-06, step = 24500 (0.422 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.599\n",
            "INFO:tensorflow:loss = 1.7881378e-06, step = 24600 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.533\n",
            "INFO:tensorflow:loss = 6.7949063e-06, step = 24700 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.962\n",
            "INFO:tensorflow:loss = 6.7949063e-06, step = 24800 (0.421 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.856\n",
            "INFO:tensorflow:loss = 6.7949063e-06, step = 24900 (0.400 sec)\n",
            "INFO:tensorflow:Saving checkpoints for 25000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:Loss for final step: 6.675698e-06.\n",
            "INFO:tensorflow:Calling model_fn.\n",
            "INFO:tensorflow:Done calling model_fn.\n",
            "INFO:tensorflow:Create CheckpointSaverHook.\n",
            "INFO:tensorflow:Graph was finalized.\n",
            "INFO:tensorflow:Restoring parameters from /tmp/tmp_n7zs7x5/model.ckpt-25000\n",
            "INFO:tensorflow:Running local_init_op.\n",
            "INFO:tensorflow:Done running local_init_op.\n",
            "INFO:tensorflow:Saving checkpoints for 25000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:loss = 0.0, step = 25000\n",
            "INFO:tensorflow:global_step/sec: 206.414\n",
            "INFO:tensorflow:loss = 0.0, step = 25100 (0.488 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.088\n",
            "INFO:tensorflow:loss = 0.0, step = 25200 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.288\n",
            "INFO:tensorflow:loss = 6.675698e-06, step = 25300 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 241.277\n",
            "INFO:tensorflow:loss = 1.1920928e-07, step = 25400 (0.411 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.719\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:loss = 1.5497195e-06, step = 25500 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 243.268\n",
            "INFO:tensorflow:loss = 2.503392e-06, step = 25600 (0.409 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.882\n",
            "INFO:tensorflow:loss = 0.0, step = 25700 (0.419 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.479\n",
            "INFO:tensorflow:loss = 1.0132739e-05, step = 25800 (0.398 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.277\n",
            "INFO:tensorflow:loss = 1.5497195e-06, step = 25900 (0.395 sec)\n",
            "INFO:tensorflow:global_step/sec: 234.359\n",
            "INFO:tensorflow:loss = 0.0, step = 26000 (0.427 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.25\n",
            "INFO:tensorflow:loss = 6.4372807e-06, step = 26100 (0.401 sec)\n",
            "INFO:tensorflow:global_step/sec: 254.764\n",
            "INFO:tensorflow:loss = 1.5497195e-06, step = 26200 (0.393 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.755\n",
            "INFO:tensorflow:loss = 1.5497195e-06, step = 26300 (0.419 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.846\n",
            "INFO:tensorflow:loss = 0.0, step = 26400 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.803\n",
            "INFO:tensorflow:loss = 1.3113013e-06, step = 26500 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 240.826\n",
            "INFO:tensorflow:loss = 0.0, step = 26600 (0.416 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.606\n",
            "INFO:tensorflow:loss = 6.198864e-06, step = 26700 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.918\n",
            "INFO:tensorflow:loss = 6.198864e-06, step = 26800 (0.395 sec)\n",
            "INFO:tensorflow:global_step/sec: 245.974\n",
            "INFO:tensorflow:loss = 9.655906e-06, step = 26900 (0.411 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.353\n",
            "INFO:tensorflow:loss = 0.0, step = 27000 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.473\n",
            "INFO:tensorflow:loss = 6.079655e-06, step = 27100 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.855\n",
            "INFO:tensorflow:loss = 1.5497195e-06, step = 27200 (0.402 sec)\n",
            "INFO:tensorflow:global_step/sec: 223.792\n",
            "INFO:tensorflow:loss = 4.1245563e-05, step = 27300 (0.448 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.998\n",
            "INFO:tensorflow:loss = 6.079655e-06, step = 27400 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.285\n",
            "INFO:tensorflow:loss = 2.264974e-06, step = 27500 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 241.243\n",
            "INFO:tensorflow:loss = 1.4305105e-06, step = 27600 (0.415 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.246\n",
            "INFO:tensorflow:loss = 1.2278481e-05, step = 27700 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.967\n",
            "INFO:tensorflow:loss = 9.298281e-06, step = 27800 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 242.017\n",
            "INFO:tensorflow:loss = 0.0, step = 27900 (0.410 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.725\n",
            "INFO:tensorflow:loss = 0.0, step = 28000 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.744\n",
            "INFO:tensorflow:loss = 1.1920922e-06, step = 28100 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 240.783\n",
            "INFO:tensorflow:loss = 1.3113013e-06, step = 28200 (0.415 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.905\n",
            "INFO:tensorflow:loss = 0.0, step = 28300 (0.401 sec)\n",
            "INFO:tensorflow:global_step/sec: 235.922\n",
            "INFO:tensorflow:loss = 5.841238e-06, step = 28400 (0.425 sec)\n",
            "INFO:tensorflow:global_step/sec: 232.03\n",
            "INFO:tensorflow:loss = 0.0, step = 28500 (0.430 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.138\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:loss = 1.4305105e-06, step = 28600 (0.415 sec)\n",
            "INFO:tensorflow:global_step/sec: 228.368\n",
            "INFO:tensorflow:loss = 0.0, step = 28700 (0.442 sec)\n",
            "INFO:tensorflow:global_step/sec: 232.084\n",
            "INFO:tensorflow:loss = 1.3113013e-06, step = 28800 (0.431 sec)\n",
            "INFO:tensorflow:global_step/sec: 236.909\n",
            "INFO:tensorflow:loss = 1.3113013e-06, step = 28900 (0.422 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.526\n",
            "INFO:tensorflow:loss = 1.3113013e-06, step = 29000 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 236.72\n",
            "INFO:tensorflow:loss = 1.1920922e-06, step = 29100 (0.424 sec)\n",
            "INFO:tensorflow:global_step/sec: 246.912\n",
            "INFO:tensorflow:loss = 0.0, step = 29200 (0.403 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.116\n",
            "INFO:tensorflow:loss = 0.0, step = 29300 (0.405 sec)\n",
            "INFO:tensorflow:global_step/sec: 231.947\n",
            "INFO:tensorflow:loss = 5.4836123e-06, step = 29400 (0.435 sec)\n",
            "INFO:tensorflow:global_step/sec: 205.764\n",
            "INFO:tensorflow:loss = 0.0, step = 29500 (0.483 sec)\n",
            "INFO:tensorflow:global_step/sec: 210.714\n",
            "INFO:tensorflow:loss = 5.6028207e-06, step = 29600 (0.478 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.077\n",
            "INFO:tensorflow:loss = 0.0, step = 29700 (0.403 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.387\n",
            "INFO:tensorflow:loss = 3.7192607e-05, step = 29800 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 213.305\n",
            "INFO:tensorflow:loss = 3.70734e-05, step = 29900 (0.470 sec)\n",
            "INFO:tensorflow:Saving checkpoints for 30000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:Loss for final step: 0.0.\n",
            "INFO:tensorflow:Calling model_fn.\n",
            "INFO:tensorflow:Done calling model_fn.\n",
            "INFO:tensorflow:Create CheckpointSaverHook.\n",
            "INFO:tensorflow:Graph was finalized.\n",
            "INFO:tensorflow:Restoring parameters from /tmp/tmp_n7zs7x5/model.ckpt-30000\n",
            "INFO:tensorflow:Running local_init_op.\n",
            "INFO:tensorflow:Done running local_init_op.\n",
            "INFO:tensorflow:Saving checkpoints for 30000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:loss = 0.0, step = 30000\n",
            "INFO:tensorflow:global_step/sec: 202.054\n",
            "INFO:tensorflow:loss = 2.0265559e-06, step = 30100 (0.500 sec)\n",
            "INFO:tensorflow:global_step/sec: 222.171\n",
            "INFO:tensorflow:loss = 5.245195e-06, step = 30200 (0.450 sec)\n",
            "INFO:tensorflow:global_step/sec: 241.786\n",
            "INFO:tensorflow:loss = 0.0, step = 30300 (0.416 sec)\n",
            "INFO:tensorflow:global_step/sec: 246.681\n",
            "INFO:tensorflow:loss = 5.3644035e-06, step = 30400 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.859\n",
            "INFO:tensorflow:loss = 0.0, step = 30500 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 217.414\n",
            "INFO:tensorflow:loss = 0.0, step = 30600 (0.463 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.597\n",
            "INFO:tensorflow:loss = 0.0, step = 30700 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 245.194\n",
            "INFO:tensorflow:loss = 1.072883e-06, step = 30800 (0.408 sec)\n",
            "INFO:tensorflow:global_step/sec: 214.049\n",
            "INFO:tensorflow:loss = 2.3841855e-07, step = 30900 (0.464 sec)\n",
            "INFO:tensorflow:global_step/sec: 240.618\n",
            "INFO:tensorflow:loss = 0.0, step = 31000 (0.419 sec)\n",
            "INFO:tensorflow:global_step/sec: 230.401\n",
            "INFO:tensorflow:loss = 1.072883e-06, step = 31100 (0.431 sec)\n",
            "INFO:tensorflow:global_step/sec: 241.73\n",
            "INFO:tensorflow:loss = 0.0, step = 31200 (0.414 sec)\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:global_step/sec: 241.969\n",
            "INFO:tensorflow:loss = 3.5404533e-05, step = 31300 (0.416 sec)\n",
            "INFO:tensorflow:global_step/sec: 254.329\n",
            "INFO:tensorflow:loss = 1.9073468e-06, step = 31400 (0.390 sec)\n",
            "INFO:tensorflow:global_step/sec: 231.05\n",
            "INFO:tensorflow:loss = 2.3841855e-07, step = 31500 (0.434 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.774\n",
            "INFO:tensorflow:loss = 3.492771e-05, step = 31600 (0.420 sec)\n",
            "INFO:tensorflow:global_step/sec: 254.736\n",
            "INFO:tensorflow:loss = 4.887569e-06, step = 31700 (0.395 sec)\n",
            "INFO:tensorflow:global_step/sec: 217.838\n",
            "INFO:tensorflow:loss = 0.0, step = 31800 (0.460 sec)\n",
            "INFO:tensorflow:global_step/sec: 252\n",
            "INFO:tensorflow:loss = 1.072883e-06, step = 31900 (0.393 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.319\n",
            "INFO:tensorflow:loss = 0.0, step = 32000 (0.423 sec)\n",
            "INFO:tensorflow:global_step/sec: 221.22\n",
            "INFO:tensorflow:loss = 0.0, step = 32100 (0.449 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.988\n",
            "INFO:tensorflow:loss = 7.748574e-06, step = 32200 (0.401 sec)\n",
            "INFO:tensorflow:global_step/sec: 221.475\n",
            "INFO:tensorflow:loss = 1.9073468e-06, step = 32300 (0.451 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.757\n",
            "INFO:tensorflow:loss = 0.0, step = 32400 (0.419 sec)\n",
            "INFO:tensorflow:global_step/sec: 224.959\n",
            "INFO:tensorflow:loss = 1.7881378e-06, step = 32500 (0.443 sec)\n",
            "INFO:tensorflow:global_step/sec: 245.626\n",
            "INFO:tensorflow:loss = 0.0, step = 32600 (0.408 sec)\n",
            "INFO:tensorflow:global_step/sec: 235.745\n",
            "INFO:tensorflow:loss = 4.76836e-06, step = 32700 (0.421 sec)\n",
            "INFO:tensorflow:global_step/sec: 227.838\n",
            "INFO:tensorflow:loss = 1.7881378e-06, step = 32800 (0.443 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.873\n",
            "INFO:tensorflow:loss = 0.0, step = 32900 (0.418 sec)\n",
            "INFO:tensorflow:global_step/sec: 224.749\n",
            "INFO:tensorflow:loss = 4.6491514e-06, step = 33000 (0.443 sec)\n",
            "INFO:tensorflow:global_step/sec: 242.592\n",
            "INFO:tensorflow:loss = 1.072883e-06, step = 33100 (0.415 sec)\n",
            "INFO:tensorflow:global_step/sec: 235.386\n",
            "INFO:tensorflow:loss = 4.5299425e-06, step = 33200 (0.424 sec)\n",
            "INFO:tensorflow:global_step/sec: 231.693\n",
            "INFO:tensorflow:loss = 0.0, step = 33300 (0.434 sec)\n",
            "INFO:tensorflow:global_step/sec: 234.948\n",
            "INFO:tensorflow:loss = 1.7881378e-06, step = 33400 (0.421 sec)\n",
            "INFO:tensorflow:global_step/sec: 229.851\n",
            "INFO:tensorflow:loss = 0.0, step = 33500 (0.446 sec)\n",
            "INFO:tensorflow:global_step/sec: 231.333\n",
            "INFO:tensorflow:loss = 0.0, step = 33600 (0.425 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.683\n",
            "INFO:tensorflow:loss = 1.072883e-06, step = 33700 (0.422 sec)\n",
            "INFO:tensorflow:global_step/sec: 220.909\n",
            "INFO:tensorflow:loss = 1.072883e-06, step = 33800 (0.451 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.465\n",
            "INFO:tensorflow:loss = 0.0, step = 33900 (0.402 sec)\n",
            "INFO:tensorflow:global_step/sec: 227.86\n",
            "INFO:tensorflow:loss = 0.0, step = 34000 (0.437 sec)\n",
            "INFO:tensorflow:global_step/sec: 235.509\n",
            "INFO:tensorflow:loss = 9.5367386e-07, step = 34100 (0.423 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.56\n",
            "INFO:tensorflow:loss = 1.9073468e-06, step = 34200 (0.417 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.54\n",
            "INFO:tensorflow:loss = 0.0, step = 34300 (0.419 sec)\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:global_step/sec: 217.582\n",
            "INFO:tensorflow:loss = 0.0, step = 34400 (0.461 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.929\n",
            "INFO:tensorflow:loss = 0.0, step = 34500 (0.418 sec)\n",
            "INFO:tensorflow:global_step/sec: 234.548\n",
            "INFO:tensorflow:loss = 0.0, step = 34600 (0.429 sec)\n",
            "INFO:tensorflow:global_step/sec: 221.965\n",
            "INFO:tensorflow:loss = 4.2915253e-06, step = 34700 (0.448 sec)\n",
            "INFO:tensorflow:global_step/sec: 157.418\n",
            "INFO:tensorflow:loss = 9.5367386e-07, step = 34800 (0.637 sec)\n",
            "INFO:tensorflow:global_step/sec: 160.102\n",
            "INFO:tensorflow:loss = 1.6689287e-06, step = 34900 (0.623 sec)\n",
            "INFO:tensorflow:Saving checkpoints for 35000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:Loss for final step: 0.0.\n",
            "INFO:tensorflow:Calling model_fn.\n",
            "INFO:tensorflow:Done calling model_fn.\n",
            "INFO:tensorflow:Create CheckpointSaverHook.\n",
            "INFO:tensorflow:Graph was finalized.\n",
            "INFO:tensorflow:Restoring parameters from /tmp/tmp_n7zs7x5/model.ckpt-35000\n",
            "INFO:tensorflow:Running local_init_op.\n",
            "INFO:tensorflow:Done running local_init_op.\n",
            "INFO:tensorflow:Saving checkpoints for 35000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:loss = 9.5367386e-07, step = 35000\n",
            "INFO:tensorflow:global_step/sec: 205.167\n",
            "INFO:tensorflow:loss = 3.111314e-05, step = 35100 (0.490 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.564\n",
            "INFO:tensorflow:loss = 9.5367386e-07, step = 35200 (0.403 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.174\n",
            "INFO:tensorflow:loss = 4.2915253e-06, step = 35300 (0.419 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.39\n",
            "INFO:tensorflow:loss = 1.072883e-06, step = 35400 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.603\n",
            "INFO:tensorflow:loss = 0.0, step = 35500 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.912\n",
            "INFO:tensorflow:loss = 4.5299425e-06, step = 35600 (0.422 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.863\n",
            "INFO:tensorflow:loss = 4.2915253e-06, step = 35700 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.6\n",
            "INFO:tensorflow:loss = 3.0994368e-06, step = 35800 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.829\n",
            "INFO:tensorflow:loss = 4.5299425e-06, step = 35900 (0.424 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.754\n",
            "INFO:tensorflow:loss = 8.344647e-07, step = 36000 (0.390 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.736\n",
            "INFO:tensorflow:loss = 0.0, step = 36100 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 242.245\n",
            "INFO:tensorflow:loss = 8.344647e-07, step = 36200 (0.419 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.1\n",
            "INFO:tensorflow:loss = 2.3841855e-07, step = 36300 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.918\n",
            "INFO:tensorflow:loss = 0.0, step = 36400 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.032\n",
            "INFO:tensorflow:loss = 0.0, step = 36500 (0.425 sec)\n",
            "INFO:tensorflow:global_step/sec: 245.481\n",
            "INFO:tensorflow:loss = 8.344647e-07, step = 36600 (0.407 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.237\n",
            "INFO:tensorflow:loss = 1.5497195e-06, step = 36700 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.602\n",
            "INFO:tensorflow:loss = 1.5497195e-06, step = 36800 (0.415 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.999\n",
            "INFO:tensorflow:loss = 0.0, step = 36900 (0.406 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.503\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:loss = 0.0, step = 37000 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.187\n",
            "INFO:tensorflow:loss = 0.0, step = 37100 (0.422 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.089\n",
            "INFO:tensorflow:loss = 0.0, step = 37200 (0.395 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.698\n",
            "INFO:tensorflow:loss = 0.0, step = 37300 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 240.194\n",
            "INFO:tensorflow:loss = 8.344647e-07, step = 37400 (0.420 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.565\n",
            "INFO:tensorflow:loss = 0.0, step = 37500 (0.405 sec)\n",
            "INFO:tensorflow:global_step/sec: 246.667\n",
            "INFO:tensorflow:loss = 3.933899e-06, step = 37600 (0.405 sec)\n",
            "INFO:tensorflow:global_step/sec: 240.369\n",
            "INFO:tensorflow:loss = 6.4372807e-06, step = 37700 (0.416 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.314\n",
            "INFO:tensorflow:loss = 3.81469e-06, step = 37800 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.578\n",
            "INFO:tensorflow:loss = 4.1723165e-06, step = 37900 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.13\n",
            "INFO:tensorflow:loss = 0.0, step = 38000 (0.418 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.324\n",
            "INFO:tensorflow:loss = 3.81469e-06, step = 38100 (0.422 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.898\n",
            "INFO:tensorflow:loss = 1.5497195e-06, step = 38200 (0.398 sec)\n",
            "INFO:tensorflow:global_step/sec: 246.032\n",
            "INFO:tensorflow:loss = 0.0, step = 38300 (0.407 sec)\n",
            "INFO:tensorflow:global_step/sec: 243.837\n",
            "INFO:tensorflow:loss = 3.81469e-06, step = 38400 (0.412 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.576\n",
            "INFO:tensorflow:loss = 6.3180723e-06, step = 38500 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.622\n",
            "INFO:tensorflow:loss = 3.81469e-06, step = 38600 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 242.582\n",
            "INFO:tensorflow:loss = 8.344647e-07, step = 38700 (0.412 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.576\n",
            "INFO:tensorflow:loss = 0.0, step = 38800 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.255\n",
            "INFO:tensorflow:loss = 0.0, step = 38900 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.396\n",
            "INFO:tensorflow:loss = 2.741776e-05, step = 39000 (0.423 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.479\n",
            "INFO:tensorflow:loss = 3.6954812e-06, step = 39100 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.396\n",
            "INFO:tensorflow:loss = 0.0, step = 39200 (0.401 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.09\n",
            "INFO:tensorflow:loss = 0.0, step = 39300 (0.418 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.825\n",
            "INFO:tensorflow:loss = 0.0, step = 39400 (0.403 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.191\n",
            "INFO:tensorflow:loss = 0.0, step = 39500 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 235.625\n",
            "INFO:tensorflow:loss = 8.344647e-07, step = 39600 (0.425 sec)\n",
            "INFO:tensorflow:global_step/sec: 245.603\n",
            "INFO:tensorflow:loss = 3.5762723e-06, step = 39700 (0.406 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.033\n",
            "INFO:tensorflow:loss = 1.5497195e-06, step = 39800 (0.405 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.779\n",
            "INFO:tensorflow:loss = 3.933899e-06, step = 39900 (0.419 sec)\n",
            "INFO:tensorflow:Saving checkpoints for 40000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:Loss for final step: 0.0.\n",
            "INFO:tensorflow:Calling model_fn.\n",
            "INFO:tensorflow:Done calling model_fn.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Create CheckpointSaverHook.\n",
            "INFO:tensorflow:Graph was finalized.\n",
            "INFO:tensorflow:Restoring parameters from /tmp/tmp_n7zs7x5/model.ckpt-40000\n",
            "INFO:tensorflow:Running local_init_op.\n",
            "INFO:tensorflow:Done running local_init_op.\n",
            "INFO:tensorflow:Saving checkpoints for 40000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:loss = 0.0, step = 40000\n",
            "INFO:tensorflow:global_step/sec: 203.418\n",
            "INFO:tensorflow:loss = 5.9604467e-06, step = 40100 (0.496 sec)\n",
            "INFO:tensorflow:global_step/sec: 244.413\n",
            "INFO:tensorflow:loss = 2.3841855e-07, step = 40200 (0.408 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.672\n",
            "INFO:tensorflow:loss = 1.4305105e-06, step = 40300 (0.406 sec)\n",
            "INFO:tensorflow:global_step/sec: 225.003\n",
            "INFO:tensorflow:loss = 8.344647e-07, step = 40400 (0.443 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.736\n",
            "INFO:tensorflow:loss = 3.933899e-06, step = 40500 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 254.487\n",
            "INFO:tensorflow:loss = 3.5762723e-06, step = 40600 (0.391 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.96\n",
            "INFO:tensorflow:loss = 8.344647e-07, step = 40700 (0.417 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.876\n",
            "INFO:tensorflow:loss = 0.0, step = 40800 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.519\n",
            "INFO:tensorflow:loss = 8.344647e-07, step = 40900 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.928\n",
            "INFO:tensorflow:loss = 0.0, step = 41000 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 242.395\n",
            "INFO:tensorflow:loss = 0.0, step = 41100 (0.413 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.77\n",
            "INFO:tensorflow:loss = 0.0, step = 41200 (0.395 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.259\n",
            "INFO:tensorflow:loss = 3.4570635e-06, step = 41300 (0.395 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.033\n",
            "INFO:tensorflow:loss = 7.152555e-07, step = 41400 (0.424 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.371\n",
            "INFO:tensorflow:loss = 0.0, step = 41500 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.747\n",
            "INFO:tensorflow:loss = 0.0, step = 41600 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 243.004\n",
            "INFO:tensorflow:loss = 3.81469e-06, step = 41700 (0.412 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.743\n",
            "INFO:tensorflow:loss = 2.527205e-05, step = 41800 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.555\n",
            "INFO:tensorflow:loss = 0.0, step = 41900 (0.394 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.338\n",
            "INFO:tensorflow:loss = 0.0, step = 42000 (0.418 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.784\n",
            "INFO:tensorflow:loss = 3.6954812e-06, step = 42100 (0.402 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.53\n",
            "INFO:tensorflow:loss = 0.0, step = 42200 (0.401 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.649\n",
            "INFO:tensorflow:loss = 7.152555e-07, step = 42300 (0.421 sec)\n",
            "INFO:tensorflow:global_step/sec: 246.983\n",
            "INFO:tensorflow:loss = 0.0, step = 42400 (0.405 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.727\n",
            "INFO:tensorflow:loss = 0.0, step = 42500 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.973\n",
            "INFO:tensorflow:loss = 2.4795225e-05, step = 42600 (0.418 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.161\n",
            "INFO:tensorflow:loss = 0.0, step = 42700 (0.398 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.143\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:loss = 3.3378547e-06, step = 42800 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.741\n",
            "INFO:tensorflow:loss = 8.344647e-07, step = 42900 (0.418 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.179\n",
            "INFO:tensorflow:loss = 8.344647e-07, step = 43000 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.182\n",
            "INFO:tensorflow:loss = 0.0, step = 43100 (0.402 sec)\n",
            "INFO:tensorflow:global_step/sec: 241.23\n",
            "INFO:tensorflow:loss = 0.0, step = 43200 (0.411 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.086\n",
            "INFO:tensorflow:loss = 2.4199193e-05, step = 43300 (0.406 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.372\n",
            "INFO:tensorflow:loss = 0.0, step = 43400 (0.403 sec)\n",
            "INFO:tensorflow:global_step/sec: 235.614\n",
            "INFO:tensorflow:loss = 0.0, step = 43500 (0.425 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.522\n",
            "INFO:tensorflow:loss = 7.867782e-06, step = 43600 (0.402 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.06\n",
            "INFO:tensorflow:loss = 0.0, step = 43700 (0.401 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.909\n",
            "INFO:tensorflow:loss = 0.0, step = 43800 (0.420 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.408\n",
            "INFO:tensorflow:loss = 3.2186456e-06, step = 43900 (0.405 sec)\n",
            "INFO:tensorflow:global_step/sec: 246.844\n",
            "INFO:tensorflow:loss = 0.0, step = 44000 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 235.047\n",
            "INFO:tensorflow:loss = 2.3841574e-05, step = 44100 (0.427 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.606\n",
            "INFO:tensorflow:loss = 5.3644035e-06, step = 44200 (0.401 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.524\n",
            "INFO:tensorflow:loss = 7.152555e-07, step = 44300 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.934\n",
            "INFO:tensorflow:loss = 7.152555e-07, step = 44400 (0.422 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.06\n",
            "INFO:tensorflow:loss = 1.1920922e-06, step = 44500 (0.395 sec)\n",
            "INFO:tensorflow:global_step/sec: 245.065\n",
            "INFO:tensorflow:loss = 3.4570635e-06, step = 44600 (0.412 sec)\n",
            "INFO:tensorflow:global_step/sec: 241.244\n",
            "INFO:tensorflow:loss = 0.0, step = 44700 (0.416 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.248\n",
            "INFO:tensorflow:loss = 7.152555e-07, step = 44800 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.189\n",
            "INFO:tensorflow:loss = 3.4570635e-06, step = 44900 (0.397 sec)\n",
            "INFO:tensorflow:Saving checkpoints for 45000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:Loss for final step: 1.1920922e-06.\n",
            "INFO:tensorflow:Calling model_fn.\n",
            "INFO:tensorflow:Done calling model_fn.\n",
            "INFO:tensorflow:Create CheckpointSaverHook.\n",
            "INFO:tensorflow:Graph was finalized.\n",
            "INFO:tensorflow:Restoring parameters from /tmp/tmp_n7zs7x5/model.ckpt-45000\n",
            "INFO:tensorflow:Running local_init_op.\n",
            "INFO:tensorflow:Done running local_init_op.\n",
            "INFO:tensorflow:Saving checkpoints for 45000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:loss = 0.0, step = 45000\n",
            "INFO:tensorflow:global_step/sec: 212.681\n",
            "INFO:tensorflow:loss = 3.0994368e-06, step = 45100 (0.476 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.199\n",
            "INFO:tensorflow:loss = 0.0, step = 45200 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 239.252\n",
            "INFO:tensorflow:loss = 8.344647e-07, step = 45300 (0.418 sec)\n",
            "INFO:tensorflow:global_step/sec: 255.65\n",
            "INFO:tensorflow:loss = 0.0, step = 45400 (0.392 sec)\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:global_step/sec: 250.928\n",
            "INFO:tensorflow:loss = 5.960463e-07, step = 45500 (0.398 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.968\n",
            "INFO:tensorflow:loss = 0.0, step = 45600 (0.417 sec)\n",
            "INFO:tensorflow:global_step/sec: 254.697\n",
            "INFO:tensorflow:loss = 2.9802277e-06, step = 45700 (0.392 sec)\n",
            "INFO:tensorflow:global_step/sec: 255.103\n",
            "INFO:tensorflow:loss = 0.0, step = 45800 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.773\n",
            "INFO:tensorflow:loss = 0.0, step = 45900 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.536\n",
            "INFO:tensorflow:loss = 0.0, step = 46000 (0.407 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.379\n",
            "INFO:tensorflow:loss = 0.0, step = 46100 (0.395 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.715\n",
            "INFO:tensorflow:loss = 2.2530301e-05, step = 46200 (0.398 sec)\n",
            "INFO:tensorflow:global_step/sec: 236.901\n",
            "INFO:tensorflow:loss = 0.0, step = 46300 (0.421 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.839\n",
            "INFO:tensorflow:loss = 7.152555e-07, step = 46400 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.931\n",
            "INFO:tensorflow:loss = 2.2291888e-05, step = 46500 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 242.143\n",
            "INFO:tensorflow:loss = 3.3378547e-06, step = 46600 (0.409 sec)\n",
            "INFO:tensorflow:global_step/sec: 254.468\n",
            "INFO:tensorflow:loss = 2.9802277e-06, step = 46700 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.323\n",
            "INFO:tensorflow:loss = 0.0, step = 46800 (0.394 sec)\n",
            "INFO:tensorflow:global_step/sec: 240.56\n",
            "INFO:tensorflow:loss = 0.0, step = 46900 (0.419 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.033\n",
            "INFO:tensorflow:loss = 0.0, step = 47000 (0.394 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.553\n",
            "INFO:tensorflow:loss = 0.0, step = 47100 (0.395 sec)\n",
            "INFO:tensorflow:global_step/sec: 243.997\n",
            "INFO:tensorflow:loss = 1.1920922e-06, step = 47200 (0.408 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.348\n",
            "INFO:tensorflow:loss = 0.0, step = 47300 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.249\n",
            "INFO:tensorflow:loss = 3.2186456e-06, step = 47400 (0.400 sec)\n",
            "INFO:tensorflow:global_step/sec: 242.156\n",
            "INFO:tensorflow:loss = 5.960463e-07, step = 47500 (0.410 sec)\n",
            "INFO:tensorflow:global_step/sec: 255.477\n",
            "INFO:tensorflow:loss = 0.0, step = 47600 (0.396 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.436\n",
            "INFO:tensorflow:loss = 0.0, step = 47700 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 240.389\n",
            "INFO:tensorflow:loss = 0.0, step = 47800 (0.416 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.692\n",
            "INFO:tensorflow:loss = 0.0, step = 47900 (0.395 sec)\n",
            "INFO:tensorflow:global_step/sec: 253.375\n",
            "INFO:tensorflow:loss = 0.0, step = 48000 (0.394 sec)\n",
            "INFO:tensorflow:global_step/sec: 242.361\n",
            "INFO:tensorflow:loss = 3.2186456e-06, step = 48100 (0.414 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.515\n",
            "INFO:tensorflow:loss = 0.0, step = 48200 (0.394 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.203\n",
            "INFO:tensorflow:loss = 0.0, step = 48300 (0.399 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.147\n",
            "INFO:tensorflow:loss = 1.1920922e-06, step = 48400 (0.420 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.243\n",
            "INFO:tensorflow:loss = 1.072883e-06, step = 48500 (0.402 sec)\n",
            "INFO:tensorflow:global_step/sec: 248.824\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:loss = 0.0, step = 48600 (0.402 sec)\n",
            "INFO:tensorflow:global_step/sec: 238.267\n",
            "INFO:tensorflow:loss = 2.7418098e-06, step = 48700 (0.421 sec)\n",
            "INFO:tensorflow:global_step/sec: 250.587\n",
            "INFO:tensorflow:loss = 1.072883e-06, step = 48800 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 249.49\n",
            "INFO:tensorflow:loss = 5.960463e-07, step = 48900 (0.401 sec)\n",
            "INFO:tensorflow:global_step/sec: 254.694\n",
            "INFO:tensorflow:loss = 3.0994368e-06, step = 49000 (0.394 sec)\n",
            "INFO:tensorflow:global_step/sec: 242.205\n",
            "INFO:tensorflow:loss = 2.7418098e-06, step = 49100 (0.415 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.255\n",
            "INFO:tensorflow:loss = 2.1219028e-05, step = 49200 (0.393 sec)\n",
            "INFO:tensorflow:global_step/sec: 252.188\n",
            "INFO:tensorflow:loss = 0.0, step = 49300 (0.401 sec)\n",
            "INFO:tensorflow:global_step/sec: 237.475\n",
            "INFO:tensorflow:loss = 2.7418098e-06, step = 49400 (0.420 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.485\n",
            "INFO:tensorflow:loss = 0.0, step = 49500 (0.398 sec)\n",
            "INFO:tensorflow:global_step/sec: 251.832\n",
            "INFO:tensorflow:loss = 2.0980615e-05, step = 49600 (0.397 sec)\n",
            "INFO:tensorflow:global_step/sec: 234.393\n",
            "INFO:tensorflow:loss = 2.7418098e-06, step = 49700 (0.427 sec)\n",
            "INFO:tensorflow:global_step/sec: 247.301\n",
            "INFO:tensorflow:loss = 1.1920922e-06, step = 49800 (0.404 sec)\n",
            "INFO:tensorflow:global_step/sec: 246.999\n",
            "INFO:tensorflow:loss = 0.0, step = 49900 (0.401 sec)\n",
            "INFO:tensorflow:Saving checkpoints for 50000 into /tmp/tmp_n7zs7x5/model.ckpt.\n",
            "INFO:tensorflow:Loss for final step: 4.6491514e-06.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "-2swRvPBdXvZ",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "test_predict = model.predict(input_fn=test_predict_input_fun)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "GWsXI3wpeins",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        },
        "outputId": "deae8783-fa4b-4f02-e11a-34b15c1b99d7"
      },
      "cell_type": "code",
      "source": [
        "test_predict = np.array([item['classes'][0] for item in test_predict])"
      ],
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Calling model_fn.\n",
            "INFO:tensorflow:Done calling model_fn.\n",
            "INFO:tensorflow:Graph was finalized.\n",
            "INFO:tensorflow:Restoring parameters from /tmp/tmp_n7zs7x5/model.ckpt-50000\n",
            "INFO:tensorflow:Running local_init_op.\n",
            "INFO:tensorflow:Done running local_init_op.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "89JkWcZBfzd6",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 2618
        },
        "outputId": "0cfe5e53-08a7-4b83-d74b-285e6f8a6f3f"
      },
      "cell_type": "code",
      "source": [
        "for clazz in test_predict:\n",
        "  result = result_classes[int(clazz)]\n",
        "  print(result)"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "H\n",
            "D\n",
            "H\n",
            "A\n",
            "H\n",
            "H\n",
            "H\n",
            "H\n",
            "D\n",
            "D\n",
            "D\n",
            "H\n",
            "H\n",
            "H\n",
            "D\n",
            "D\n",
            "H\n",
            "H\n",
            "H\n",
            "H\n",
            "H\n",
            "A\n",
            "H\n",
            "D\n",
            "H\n",
            "H\n",
            "D\n",
            "D\n",
            "H\n",
            "H\n",
            "D\n",
            "H\n",
            "D\n",
            "H\n",
            "H\n",
            "D\n",
            "A\n",
            "A\n",
            "H\n",
            "H\n",
            "A\n",
            "H\n",
            "H\n",
            "H\n",
            "A\n",
            "H\n",
            "A\n",
            "H\n",
            "H\n",
            "H\n",
            "H\n",
            "A\n",
            "H\n",
            "H\n",
            "H\n",
            "D\n",
            "A\n",
            "A\n",
            "D\n",
            "D\n",
            "A\n",
            "H\n",
            "D\n",
            "D\n",
            "D\n",
            "H\n",
            "H\n",
            "H\n",
            "A\n",
            "H\n",
            "H\n",
            "H\n",
            "H\n",
            "D\n",
            "D\n",
            "D\n",
            "D\n",
            "D\n",
            "D\n",
            "A\n",
            "D\n",
            "H\n",
            "A\n",
            "H\n",
            "H\n",
            "A\n",
            "D\n",
            "D\n",
            "H\n",
            "A\n",
            "A\n",
            "H\n",
            "H\n",
            "H\n",
            "D\n",
            "H\n",
            "D\n",
            "A\n",
            "H\n",
            "H\n",
            "H\n",
            "A\n",
            "H\n",
            "D\n",
            "A\n",
            "D\n",
            "H\n",
            "A\n",
            "H\n",
            "D\n",
            "A\n",
            "D\n",
            "H\n",
            "D\n",
            "A\n",
            "H\n",
            "D\n",
            "A\n",
            "A\n",
            "H\n",
            "H\n",
            "D\n",
            "H\n",
            "H\n",
            "H\n",
            "H\n",
            "D\n",
            "H\n",
            "D\n",
            "A\n",
            "A\n",
            "H\n",
            "H\n",
            "D\n",
            "D\n",
            "H\n",
            "D\n",
            "H\n",
            "D\n",
            "H\n",
            "H\n",
            "H\n",
            "D\n",
            "A\n",
            "H\n",
            "H\n",
            "D\n",
            "A\n",
            "A\n",
            "A\n",
            "H\n",
            "A\n",
            "A\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}